<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/mvc
              http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <!-- Imports application configuration -->
  <import resource="classpath:application-config.xml"/>

  <!--
        The configuration for your 'accounts' Dispatcher Servlet.

        This example uses component scanning to automatically
        pick up controllers.
            - Dependencies of controllers are wired using @Autowired support.
            - The URI scheme is controller using @RequestMapping annotations
    -->

  <context:component-scan base-package="se.vgregion.userfeedback.controllers"/>

  <mvc:annotation-driven />

  <!--
        if you would not have used component scanning you would have had
        to wire up the controller yourself:

        <bean class="accounts.web.AccountController">
            <constructor-arg ref="accountManager"/>
        </bean>
     -->

  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/WEB-INF/views/"/>
    <property name="suffix" value=".jsp"/>
  </bean>

</beans>