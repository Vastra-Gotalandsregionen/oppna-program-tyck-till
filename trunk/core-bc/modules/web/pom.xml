<?xml version="1.0"?>
<!--
This is the Web-app Maven POM.


Template version: 1.1-RC1
Generation time : 2009-04-17 09:01:59 CEST
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>se.vgr.tyck-till</groupId>
    <artifactId>tyck-till-core-bc</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <artifactId>tyck-till-core-bc-module-web</artifactId>
  <packaging>war</packaging>
  <name>${project.artifactId}</name>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <!-- Configure eclipse plug-in to generate a context root that does not have the version number on it -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <wtpContextName>${project.artifactId}</wtpContextName>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    
    <dependency>
      <groupId>se.vgr.javg</groupId>
      <artifactId>javg-rt-support</artifactId>
      <version>${javg.version}</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <!-- TODO: upgrade to Spring WebFlow 2.x -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-webflow</artifactId>
      <version>1.0.5</version>
    </dependency>
    <dependency>
      <!-- Use the resource-loading servlet from Spring-JS -->
      <groupId>org.springframework.webflow</groupId>
      <artifactId>org.springframework.js</artifactId>
      <version>2.0.3.RELEASE</version>
    </dependency>
    <dependency>
      <!-- required by the Spring-JS resource-loading servlet -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.fw.version}</version>
    </dependency>
    <!--
      We use a Servlet Filter from spring-web to control UTF-8 encodings.
      Facelets doesn't do this for us.
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.fw.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <version>1.2_09</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>1.2_09</version>
      <scope>compile</scope>
    </dependency>
    <!--
      EL-jars (from java.net).
      Needed for Facelets 1.1.12 with JSF 1.1 (using MyFaces 1.1.5
      as JSF-implementation).
    -->
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>el-api</artifactId>
      <version>1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>el-impl</groupId>
      <artifactId>el-impl</artifactId>
      <version>1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.facelets</groupId>
      <artifactId>jsf-facelets</artifactId>
      <version>1.1.14</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

</project>
